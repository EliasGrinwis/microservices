name: Build and deliver containers

on: push

jobs:
  back-end:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test, and deliver customer-service container
        run: |
          cd ./Back-end/customer-service
          mvn package -DskipTests
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USER }}/customer-service:latest .
          docker push ${{ secrets.DOCKER_USER }}/customer-service:latest

      - name: Build, test, and deliver room-service container
        run: |
          cd ./Back-end/room-service
          mvn package -DskipTests
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USER }}/room-service:latest .
          docker push ${{ secrets.DOCKER_USER }}/room-service:latest

      - name: Build, test, and deliver hotel-service container
        run: |
          cd ./Back-end/hotel-service
          mvn package -DskipTests
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USER }}/hotel-service:latest .
          docker push ${{ secrets.DOCKER_USER }}/hotel-service:latest

      - name: Build, test, and deliver ede-api-gateway container
        run: |
          cd ./Back-end/api-gateway
          mvn package -DskipTests
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build --build-arg GOOGLE_CLIENTID=${{ secrets.GOOGLE_CLIENTID }} --build-arg GOOGLE_CLIENTSECRET=${{ secrets.GOOGLE_CLIENTSECRET }} -t ${{ secrets.DOCKER_USER }}/ede-api-gateway:latest .
          docker push ${{ secrets.DOCKER_USER }}/ede-api-gateway:latest
  
  front-end:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./Front-end
    
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: "18.17.1"
          
      - name: Install Dependencies
        run: npm install
    
      - name: Build
        run: npm run build
    
      - name: Deploy to Firebase
        run: |
          npm install -g firebase-tools
          firebase deploy --token ${{ secrets.FIREBASE_TOKEN }}
