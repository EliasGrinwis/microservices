apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: api-gateway
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api-gateway
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/project-default: "true"
        io.kompose.service: api-gateway
    spec:
      containers:
        - env:
            - name: CUSTOMER_SERVICE_BASEURL
              value: customer-service:8080
            - name: HOTEL_SERVICE_BASEURL
              value: hotel-service:8081
            - name: ROOM_SERVICE_BASEURL
              value: room-service:8082
          image: eliasgps/ede-api-gateway
          name: api-gateway
          ports:
            - containerPort: 8083
              hostPort: 8083
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: api-gateway
  name: api-gateway
spec:
  ports:
    - name: "8083"
      port: 8083
      targetPort: 8083
  selector:
    io.kompose.service: api-gateway
status:
  loadBalancer: {}
---

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: customer-service
  name: customer-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: customer-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/project-default: "true"
        io.kompose.service: customer-service
    spec:
      containers:
        - env:
            - name: MONGODB_HOST
              value: mongo-customers
            - name: MONGODB_PORT
              value: "27017"
          image: eliasgps/customer-service
          name: customer-service
          ports:
            - containerPort: 8080
              hostPort: 8080
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: customer-service
  name: customer-service
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: customer-service
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: hotel-service
  name: hotel-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: hotel-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/project-default: "true"
        io.kompose.service: hotel-service
    spec:
      containers:
        - env:
            - name: CUSTOMER_SERVICE_BASEURL
              value: customer-service:8080
            - name: MYSQL_DB_HOST
              value: mysql-hotel
            - name: MYSQL_DB_PASSWORD
              value: abc123
            - name: MYSQL_DB_PORT
              value: "3306"
            - name: MYSQL_DB_USERNAME
              value: root
            - name: ROOM_INFO_SERVICE_BASEURL
              value: room-service:8082
          image: eliasgps/hotel-service
          name: hotel-service
          ports:
            - containerPort: 8081
              hostPort: 8081
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: hotel-service
  name: hotel-service
spec:
  ports:
    - name: "8081"
      port: 8081
      targetPort: 8081
  selector:
    io.kompose.service: hotel-service
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: mongo-customers
  name: mongo-customers
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo-customers
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/project-default: "true"
        io.kompose.service: mongo-customers
    spec:
      containers:
        - image: mongo:latest
          name: mongo-customers
          ports:
            - containerPort: 27017
              hostPort: 27017
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /data/db
              name: mongodb-customer-data
      restartPolicy: Always
      volumes:
        - name: mongodb-customer-data
          persistentVolumeClaim:
            claimName: mongodb-customer-data
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: mongo-customers
  name: mongo-customers
spec:
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    io.kompose.service: mongo-customers
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mongodb-customer-data
  name: mongodb-customer-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mysql-hotel-data
  name: mysql-hotel-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: mysql-hotel
  name: mysql-hotel
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysql-hotel
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/project-default: "true"
        io.kompose.service: mysql-hotel
    spec:
      containers:
        - env:
            - name: MYSQL_ROOT_PASSWORD
              value: abc123
          image: mysql:latest
          name: mysql-hotel
          ports:
            - containerPort: 3306
              hostPort: 3306
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-hotel-data
      restartPolicy: Always
      volumes:
        - name: mysql-hotel-data
          persistentVolumeClaim:
            claimName: mysql-hotel-data
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: mysql-hotel
  name: mysql-hotel
spec:
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
  selector:
    io.kompose.service: mysql-hotel
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mysql-room-data
  name: mysql-room-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: mysql-room
  name: mysql-room
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysql-room
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/project-default: "true"
        io.kompose.service: mysql-room
    spec:
      containers:
        - env:
            - name: MYSQL_ROOT_PASSWORD
              value: abc123
          image: mysql:latest
          name: mysql-room
          ports:
            - containerPort: 3306
              hostPort: 3307
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-room-data
      restartPolicy: Always
      volumes:
        - name: mysql-room-data
          persistentVolumeClaim:
            claimName: mysql-room-data
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: mysql-room
  name: mysql-room
spec:
  ports:
    - name: "3307"
      port: 3307
      targetPort: 3306
  selector:
    io.kompose.service: mysql-room
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/project-default: "true"
        io.kompose.service: redis
    spec:
      containers:
        - image: redis:latest
          name: redis
          ports:
            - containerPort: 6379
              hostPort: 6379
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
    io.kompose.service: redis
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: room-service
  name: room-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: room-service
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/project-default: "true"
        io.kompose.service: room-service
    spec:
      containers:
        - env:
            - name: MYSQL_DB_HOST
              value: mysql-room
            - name: MYSQL_DB_PASSWORD
              value: abc123
            - name: MYSQL_DB_PORT
              value: "3306"
            - name: MYSQL_DB_USERNAME
              value: root
          image: eliasgps/room-service
          name: room-service
          ports:
            - containerPort: 8082
              hostPort: 8082
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: room-service
  name: room-service
spec:
  ports:
    - name: "8082"
      port: 8082
      targetPort: 8082
  selector:
    io.kompose.service: room-service
status:
  loadBalancer: {}
---

